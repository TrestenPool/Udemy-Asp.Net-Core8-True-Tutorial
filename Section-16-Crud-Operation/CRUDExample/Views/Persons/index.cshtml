@{
  ViewData["title"] = "Persons Index";
  List<PersonResponse> persons = (List<PersonResponse>?)ViewData["persons"] ?? new List<PersonResponse>();
  Dictionary<string,string> SearchFields = (Dictionary<string,string>?)ViewData["SearchFields"] ?? new Dictionary<string,string>();
  string? sortBy = (string?)ViewData["CurrentSortBy"];
  string? searchBy = (string?)ViewData["CurrentSearchBy"];
  string? searchString = (string?)ViewData["CurrentSearchString"];
  Enum.TryParse(ViewData["CurrentSortOrder"]?.ToString(), out SortOrderEnum sortOrder);
}

<h1>Persons index page</h1>

<!-- Form -->
<form action="~/persons/index" method="get">

  <!-- Search Pane on top -->
  <div class="box flex">
    <!-- Filter to search on -->
    <div class="flex-1">
      <select class="form-input" name="searchBy">
        @foreach(var field in SearchFields) {
          @if(searchBy == field.Key){
            <option selected value="@field.Key">@field.Value</option>
          }
          else {
            <option value="@field.Key">@field.Value</option>
          }
        }
      </select>
    </div>

    <!-- Text to search for -->
    <div class="flex-1">
      @if(!string.IsNullOrEmpty(searchString)){
        <input value="@(searchString)" type="search" id="search" class="form-input" name="searchString">
      }
      else {
        <input placeholder="SearchString" type="search" id="search" class="form-input" name="searchString">
      }
    </div>

    <!-- Search and clear buttons -->
    <div class="flex-1">
      <button class="button button-blue-back" placeholder="something">Search</button>
      <a href="~/persons/index" class="link-hover">Clear All</a>
    </div>
  </div>

  <!-- Table -->
  <table class="table w-100 mt">
    <thead>
      <tr>
        <th>
          @await Html.PartialAsync("~/Views/Shared/_GridColumnHeader.cshtml", viewData: new ViewDataDictionary(ViewData){
            {"ColumnName", nameof(PersonResponse.PersonName)},
            {"VisualName", "Name"}
          })
        </th>
        <th>
          @await Html.PartialAsync("~/Views/Shared/_GridColumnHeader.cshtml", viewData: new ViewDataDictionary(ViewData){
            {"ColumnName", nameof(PersonResponse.Email)},
            {"VisualName", "Email"}
          })
        </th>
        <th>
          @await Html.PartialAsync("~/Views/Shared/_GridColumnHeader.cshtml", viewData: new ViewDataDictionary(ViewData){
            {"ColumnName", nameof(PersonResponse.DateOfBirth)},
            {"VisualName", "Date of Birth"}
          })
        </th>
        <th>
          @await Html.PartialAsync("~/Views/Shared/_GridColumnHeader.cshtml", viewData: new ViewDataDictionary(ViewData){
            {"ColumnName", nameof(PersonResponse.Age)},
            {"VisualName", "Age"}
          })
        </th>
        <th>
          @await Html.PartialAsync("~/Views/Shared/_GridColumnHeader.cshtml", viewData: new ViewDataDictionary(ViewData){
            {"ColumnName", nameof(PersonResponse.PersonGender)},
            {"VisualName", "Gender"}
          })
        </th>
      </tr>
    </thead>
    <tbody>
      @foreach(PersonResponse person in persons){
        <tr>
          <td style="width:15%">@person.PersonName</td>
          <td style="width:15%">@person.Email</td>
          <td style="width:15%">@person.DateOfBirth?.ToString("dd MMM yyyy")</td>
          <td style="width:15%">@person.Age</td>
          <td style="width:15%">@person.PersonGender</td>
        </tr>
      }
    </tbody>

  </table>

</form>
